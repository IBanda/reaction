'use strict';

function setAttribute(name, value) {
  var firstChild = this.getFirstChild();

  return firstChild.setAttribute(name, value);
}

function getAttribute(name) {
  var firstChild = this.getFirstChild();

  return firstChild.getAttribute(name);
}

function clearAttribute(name) {
  var firstChild = this.getFirstChild();

  firstChild.clearAttribute(name);
}

function addAttribute(name, value) {
  var firstChild = this.getFirstChild();

  firstChild.addAttribute(name, value);
}

function removeAttribute(name) {
  var firstChild = this.getFirstChild();

  firstChild.removeAttribute(name);
}

function hasAttribute(name) {
  var firstChild = this.getFirstChild();

  return firstChild.hasAttribute(name);
}

function setClass(className) {
  var firstChild = this.getFirstChild();

  firstChild.setClass(className);
}

function addClass(className) {
  var firstChild = this.getFirstChild();

  firstChild.addClass(className);
}

function removeClass(className) {
  var firstChild = this.getFirstChild();

  firstChild.removeClass(className);
}

function toggleClass(className) {
  var firstChild = this.getFirstChild();

  firstChild.toggleClass(className);
}

function hasClass(className) {
  var firstChild = this.getFirstChild();

  return firstChild.hasClass(className);
}

function hasClasses(classNames) {
  var firstChild = this.getFirstChild();

  return firstChild.hasClasses(classNames);
}

function clearClasses() {
  var firstChild = this.getFirstChild();

  firstChild.clearClasses();
}

function getTagName() {
  return null; ///
}

function setStyle(name, value) {
  var firstChild = this.getFirstChild();

  firstChild.setStyle(name, value);
}

module.exports = {
  setAttribute: setAttribute,
  getAttribute: getAttribute,
  clearAttribute: clearAttribute,
  addAttribute: addAttribute,
  removeAttribute: removeAttribute,
  hasAttribute: hasAttribute,
  setClass: setClass,
  addClass: addClass,
  removeClass: removeClass,
  toggleClass: toggleClass,
  hasClass: hasClass,
  hasClasses: hasClasses,
  clearClasses: clearClasses,
  getTagName: getTagName,
  setStyle: setStyle
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi9taXhpbnMvcmVhY3RFbGVtZW50LmpzIl0sIm5hbWVzIjpbInNldEF0dHJpYnV0ZSIsIm5hbWUiLCJ2YWx1ZSIsImZpcnN0Q2hpbGQiLCJnZXRGaXJzdENoaWxkIiwiZ2V0QXR0cmlidXRlIiwiY2xlYXJBdHRyaWJ1dGUiLCJhZGRBdHRyaWJ1dGUiLCJyZW1vdmVBdHRyaWJ1dGUiLCJoYXNBdHRyaWJ1dGUiLCJzZXRDbGFzcyIsImNsYXNzTmFtZSIsImFkZENsYXNzIiwicmVtb3ZlQ2xhc3MiLCJ0b2dnbGVDbGFzcyIsImhhc0NsYXNzIiwiaGFzQ2xhc3NlcyIsImNsYXNzTmFtZXMiLCJjbGVhckNsYXNzZXMiLCJnZXRUYWdOYW1lIiwic2V0U3R5bGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxTQUFTQSxZQUFULENBQXNCQyxJQUF0QixFQUE0QkMsS0FBNUIsRUFBbUM7QUFDakMsTUFBTUMsYUFBYSxLQUFLQyxhQUFMLEVBQW5COztBQUVBLFNBQU9ELFdBQVdILFlBQVgsQ0FBd0JDLElBQXhCLEVBQThCQyxLQUE5QixDQUFQO0FBQ0Q7O0FBRUQsU0FBU0csWUFBVCxDQUFzQkosSUFBdEIsRUFBNEI7QUFDMUIsTUFBTUUsYUFBYSxLQUFLQyxhQUFMLEVBQW5COztBQUVBLFNBQU9ELFdBQVdFLFlBQVgsQ0FBd0JKLElBQXhCLENBQVA7QUFDRDs7QUFFRCxTQUFTSyxjQUFULENBQXdCTCxJQUF4QixFQUE4QjtBQUM1QixNQUFNRSxhQUFhLEtBQUtDLGFBQUwsRUFBbkI7O0FBRUFELGFBQVdHLGNBQVgsQ0FBMEJMLElBQTFCO0FBQ0Q7O0FBRUQsU0FBU00sWUFBVCxDQUFzQk4sSUFBdEIsRUFBNEJDLEtBQTVCLEVBQW1DO0FBQ2pDLE1BQU1DLGFBQWEsS0FBS0MsYUFBTCxFQUFuQjs7QUFFQUQsYUFBV0ksWUFBWCxDQUF3Qk4sSUFBeEIsRUFBOEJDLEtBQTlCO0FBQ0Q7O0FBRUQsU0FBU00sZUFBVCxDQUF5QlAsSUFBekIsRUFBK0I7QUFDN0IsTUFBTUUsYUFBYSxLQUFLQyxhQUFMLEVBQW5COztBQUVBRCxhQUFXSyxlQUFYLENBQTJCUCxJQUEzQjtBQUNEOztBQUVELFNBQVNRLFlBQVQsQ0FBc0JSLElBQXRCLEVBQTRCO0FBQzFCLE1BQU1FLGFBQWEsS0FBS0MsYUFBTCxFQUFuQjs7QUFFQSxTQUFPRCxXQUFXTSxZQUFYLENBQXdCUixJQUF4QixDQUFQO0FBQ0Q7O0FBRUQsU0FBU1MsUUFBVCxDQUFrQkMsU0FBbEIsRUFBNkI7QUFDM0IsTUFBTVIsYUFBYSxLQUFLQyxhQUFMLEVBQW5COztBQUVBRCxhQUFXTyxRQUFYLENBQW9CQyxTQUFwQjtBQUNEOztBQUVELFNBQVNDLFFBQVQsQ0FBa0JELFNBQWxCLEVBQTZCO0FBQzNCLE1BQU1SLGFBQWEsS0FBS0MsYUFBTCxFQUFuQjs7QUFFQUQsYUFBV1MsUUFBWCxDQUFvQkQsU0FBcEI7QUFDRDs7QUFFRCxTQUFTRSxXQUFULENBQXFCRixTQUFyQixFQUFnQztBQUM5QixNQUFNUixhQUFhLEtBQUtDLGFBQUwsRUFBbkI7O0FBRUFELGFBQVdVLFdBQVgsQ0FBdUJGLFNBQXZCO0FBQ0Q7O0FBRUQsU0FBU0csV0FBVCxDQUFxQkgsU0FBckIsRUFBZ0M7QUFDOUIsTUFBTVIsYUFBYSxLQUFLQyxhQUFMLEVBQW5COztBQUVBRCxhQUFXVyxXQUFYLENBQXVCSCxTQUF2QjtBQUNEOztBQUVELFNBQVNJLFFBQVQsQ0FBa0JKLFNBQWxCLEVBQTZCO0FBQzNCLE1BQU1SLGFBQWEsS0FBS0MsYUFBTCxFQUFuQjs7QUFFQSxTQUFPRCxXQUFXWSxRQUFYLENBQW9CSixTQUFwQixDQUFQO0FBQ0Q7O0FBRUQsU0FBU0ssVUFBVCxDQUFvQkMsVUFBcEIsRUFBZ0M7QUFDOUIsTUFBTWQsYUFBYSxLQUFLQyxhQUFMLEVBQW5COztBQUVBLFNBQU9ELFdBQVdhLFVBQVgsQ0FBc0JDLFVBQXRCLENBQVA7QUFDRDs7QUFFRCxTQUFTQyxZQUFULEdBQXdCO0FBQ3RCLE1BQU1mLGFBQWEsS0FBS0MsYUFBTCxFQUFuQjs7QUFFQUQsYUFBV2UsWUFBWDtBQUNEOztBQUVELFNBQVNDLFVBQVQsR0FBc0I7QUFDcEIsU0FBTyxJQUFQLENBRG9CLENBQ047QUFDZjs7QUFFRCxTQUFTQyxRQUFULENBQWtCbkIsSUFBbEIsRUFBd0JDLEtBQXhCLEVBQStCO0FBQzdCLE1BQU1DLGFBQWEsS0FBS0MsYUFBTCxFQUFuQjs7QUFFQUQsYUFBV2lCLFFBQVgsQ0FBb0JuQixJQUFwQixFQUEwQkMsS0FBMUI7QUFDRDs7QUFFRG1CLE9BQU9DLE9BQVAsR0FBaUI7QUFDZnRCLDRCQURlO0FBRWZLLDRCQUZlO0FBR2ZDLGdDQUhlO0FBSWZDLDRCQUplO0FBS2ZDLGtDQUxlO0FBTWZDLDRCQU5lO0FBT2ZDLG9CQVBlO0FBUWZFLG9CQVJlO0FBU2ZDLDBCQVRlO0FBVWZDLDBCQVZlO0FBV2ZDLG9CQVhlO0FBWWZDLHdCQVplO0FBYWZFLDRCQWJlO0FBY2ZDLHdCQWRlO0FBZWZDO0FBZmUsQ0FBakIiLCJmaWxlIjoicmVhY3RFbGVtZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGUobmFtZSwgdmFsdWUpIHtcbiAgY29uc3QgZmlyc3RDaGlsZCA9IHRoaXMuZ2V0Rmlyc3RDaGlsZCgpO1xuXG4gIHJldHVybiBmaXJzdENoaWxkLnNldEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSk7XG59XG5cbmZ1bmN0aW9uIGdldEF0dHJpYnV0ZShuYW1lKSB7XG4gIGNvbnN0IGZpcnN0Q2hpbGQgPSB0aGlzLmdldEZpcnN0Q2hpbGQoKTtcblxuICByZXR1cm4gZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUobmFtZSk7XG59XG5cbmZ1bmN0aW9uIGNsZWFyQXR0cmlidXRlKG5hbWUpIHtcbiAgY29uc3QgZmlyc3RDaGlsZCA9IHRoaXMuZ2V0Rmlyc3RDaGlsZCgpO1xuXG4gIGZpcnN0Q2hpbGQuY2xlYXJBdHRyaWJ1dGUobmFtZSk7XG59XG5cbmZ1bmN0aW9uIGFkZEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSkgeyBcbiAgY29uc3QgZmlyc3RDaGlsZCA9IHRoaXMuZ2V0Rmlyc3RDaGlsZCgpO1xuXG4gIGZpcnN0Q2hpbGQuYWRkQXR0cmlidXRlKG5hbWUsIHZhbHVlKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlQXR0cmlidXRlKG5hbWUpIHtcbiAgY29uc3QgZmlyc3RDaGlsZCA9IHRoaXMuZ2V0Rmlyc3RDaGlsZCgpO1xuXG4gIGZpcnN0Q2hpbGQucmVtb3ZlQXR0cmlidXRlKG5hbWUpXG59XG5cbmZ1bmN0aW9uIGhhc0F0dHJpYnV0ZShuYW1lKSB7XG4gIGNvbnN0IGZpcnN0Q2hpbGQgPSB0aGlzLmdldEZpcnN0Q2hpbGQoKTtcblxuICByZXR1cm4gZmlyc3RDaGlsZC5oYXNBdHRyaWJ1dGUobmFtZSk7XG59XG5cbmZ1bmN0aW9uIHNldENsYXNzKGNsYXNzTmFtZSkge1xuICBjb25zdCBmaXJzdENoaWxkID0gdGhpcy5nZXRGaXJzdENoaWxkKCk7XG5cbiAgZmlyc3RDaGlsZC5zZXRDbGFzcyhjbGFzc05hbWUpO1xufVxuXG5mdW5jdGlvbiBhZGRDbGFzcyhjbGFzc05hbWUpIHtcbiAgY29uc3QgZmlyc3RDaGlsZCA9IHRoaXMuZ2V0Rmlyc3RDaGlsZCgpO1xuXG4gIGZpcnN0Q2hpbGQuYWRkQ2xhc3MoY2xhc3NOYW1lKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlQ2xhc3MoY2xhc3NOYW1lKSB7XG4gIGNvbnN0IGZpcnN0Q2hpbGQgPSB0aGlzLmdldEZpcnN0Q2hpbGQoKTtcblxuICBmaXJzdENoaWxkLnJlbW92ZUNsYXNzKGNsYXNzTmFtZSk7XG59XG5cbmZ1bmN0aW9uIHRvZ2dsZUNsYXNzKGNsYXNzTmFtZSkge1xuICBjb25zdCBmaXJzdENoaWxkID0gdGhpcy5nZXRGaXJzdENoaWxkKCk7XG5cbiAgZmlyc3RDaGlsZC50b2dnbGVDbGFzcyhjbGFzc05hbWUpO1xufVxuXG5mdW5jdGlvbiBoYXNDbGFzcyhjbGFzc05hbWUpIHtcbiAgY29uc3QgZmlyc3RDaGlsZCA9IHRoaXMuZ2V0Rmlyc3RDaGlsZCgpO1xuXG4gIHJldHVybiBmaXJzdENoaWxkLmhhc0NsYXNzKGNsYXNzTmFtZSk7XG59XG5cbmZ1bmN0aW9uIGhhc0NsYXNzZXMoY2xhc3NOYW1lcykge1xuICBjb25zdCBmaXJzdENoaWxkID0gdGhpcy5nZXRGaXJzdENoaWxkKCk7XG5cbiAgcmV0dXJuIGZpcnN0Q2hpbGQuaGFzQ2xhc3NlcyhjbGFzc05hbWVzKTtcbn1cblxuZnVuY3Rpb24gY2xlYXJDbGFzc2VzKCkge1xuICBjb25zdCBmaXJzdENoaWxkID0gdGhpcy5nZXRGaXJzdENoaWxkKCk7XG5cbiAgZmlyc3RDaGlsZC5jbGVhckNsYXNzZXMoKTtcbn1cblxuZnVuY3Rpb24gZ2V0VGFnTmFtZSgpIHtcbiAgcmV0dXJuIG51bGw7ICAvLy9cbn1cblxuZnVuY3Rpb24gc2V0U3R5bGUobmFtZSwgdmFsdWUpIHtcbiAgY29uc3QgZmlyc3RDaGlsZCA9IHRoaXMuZ2V0Rmlyc3RDaGlsZCgpO1xuXG4gIGZpcnN0Q2hpbGQuc2V0U3R5bGUobmFtZSwgdmFsdWUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc2V0QXR0cmlidXRlLFxuICBnZXRBdHRyaWJ1dGUsXG4gIGNsZWFyQXR0cmlidXRlLFxuICBhZGRBdHRyaWJ1dGUsXG4gIHJlbW92ZUF0dHJpYnV0ZSxcbiAgaGFzQXR0cmlidXRlLFxuICBzZXRDbGFzcyxcbiAgYWRkQ2xhc3MsXG4gIHJlbW92ZUNsYXNzLFxuICB0b2dnbGVDbGFzcyxcbiAgaGFzQ2xhc3MsXG4gIGhhc0NsYXNzZXMsXG4gIGNsZWFyQ2xhc3NlcyxcbiAgZ2V0VGFnTmFtZSxcbiAgc2V0U3R5bGVcbn07XG4iXX0=