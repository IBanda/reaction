"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

function setAttribute(name, value) {
  var firstChild = this.getFirstChild();
  return firstChild.setAttribute(name, value);
}

function getAttribute(name) {
  var firstChild = this.getFirstChild();
  return firstChild.getAttribute(name);
}

function clearAttribute(name) {
  var firstChild = this.getFirstChild();
  firstChild.clearAttribute(name);
}

function addAttribute(name, value) {
  var firstChild = this.getFirstChild();
  firstChild.addAttribute(name, value);
}

function removeAttribute(name) {
  var firstChild = this.getFirstChild();
  firstChild.removeAttribute(name);
}

function hasAttribute(name) {
  var firstChild = this.getFirstChild();
  return firstChild.hasAttribute(name);
}

function setClass(className) {
  var firstChild = this.getFirstChild();
  firstChild.setClass(className);
}

function addClass(className) {
  var firstChild = this.getFirstChild();
  firstChild.addClass(className);
}

function removeClass(className) {
  var firstChild = this.getFirstChild();
  firstChild.removeClass(className);
}

function toggleClass(className) {
  var firstChild = this.getFirstChild();
  firstChild.toggleClass(className);
}

function hasClass(className) {
  var firstChild = this.getFirstChild();
  return firstChild.hasClass(className);
}

function hasClasses(classNames) {
  var firstChild = this.getFirstChild();
  return firstChild.hasClasses(classNames);
}

function clearClasses() {
  var firstChild = this.getFirstChild();
  firstChild.clearClasses();
}

function getTagName() {
  return null; ///
}

function setStyle(name, value) {
  var firstChild = this.getFirstChild();
  firstChild.setStyle(name, value);
}

var _default = {
  setAttribute: setAttribute,
  getAttribute: getAttribute,
  clearAttribute: clearAttribute,
  addAttribute: addAttribute,
  removeAttribute: removeAttribute,
  hasAttribute: hasAttribute,
  setClass: setClass,
  addClass: addClass,
  removeClass: removeClass,
  toggleClass: toggleClass,
  hasClass: hasClass,
  hasClasses: hasClasses,
  clearClasses: clearClasses,
  getTagName: getTagName,
  setStyle: setStyle
};
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWN0RWxlbWVudC5qcyJdLCJuYW1lcyI6WyJzZXRBdHRyaWJ1dGUiLCJuYW1lIiwidmFsdWUiLCJmaXJzdENoaWxkIiwiZ2V0Rmlyc3RDaGlsZCIsImdldEF0dHJpYnV0ZSIsImNsZWFyQXR0cmlidXRlIiwiYWRkQXR0cmlidXRlIiwicmVtb3ZlQXR0cmlidXRlIiwiaGFzQXR0cmlidXRlIiwic2V0Q2xhc3MiLCJjbGFzc05hbWUiLCJhZGRDbGFzcyIsInJlbW92ZUNsYXNzIiwidG9nZ2xlQ2xhc3MiLCJoYXNDbGFzcyIsImhhc0NsYXNzZXMiLCJjbGFzc05hbWVzIiwiY2xlYXJDbGFzc2VzIiwiZ2V0VGFnTmFtZSIsInNldFN0eWxlIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7OztBQUVBLFNBQVNBLFlBQVQsQ0FBc0JDLElBQXRCLEVBQTRCQyxLQUE1QixFQUFtQztBQUNqQyxNQUFNQyxVQUFVLEdBQUcsS0FBS0MsYUFBTCxFQUFuQjtBQUVBLFNBQU9ELFVBQVUsQ0FBQ0gsWUFBWCxDQUF3QkMsSUFBeEIsRUFBOEJDLEtBQTlCLENBQVA7QUFDRDs7QUFFRCxTQUFTRyxZQUFULENBQXNCSixJQUF0QixFQUE0QjtBQUMxQixNQUFNRSxVQUFVLEdBQUcsS0FBS0MsYUFBTCxFQUFuQjtBQUVBLFNBQU9ELFVBQVUsQ0FBQ0UsWUFBWCxDQUF3QkosSUFBeEIsQ0FBUDtBQUNEOztBQUVELFNBQVNLLGNBQVQsQ0FBd0JMLElBQXhCLEVBQThCO0FBQzVCLE1BQU1FLFVBQVUsR0FBRyxLQUFLQyxhQUFMLEVBQW5CO0FBRUFELEVBQUFBLFVBQVUsQ0FBQ0csY0FBWCxDQUEwQkwsSUFBMUI7QUFDRDs7QUFFRCxTQUFTTSxZQUFULENBQXNCTixJQUF0QixFQUE0QkMsS0FBNUIsRUFBbUM7QUFDakMsTUFBTUMsVUFBVSxHQUFHLEtBQUtDLGFBQUwsRUFBbkI7QUFFQUQsRUFBQUEsVUFBVSxDQUFDSSxZQUFYLENBQXdCTixJQUF4QixFQUE4QkMsS0FBOUI7QUFDRDs7QUFFRCxTQUFTTSxlQUFULENBQXlCUCxJQUF6QixFQUErQjtBQUM3QixNQUFNRSxVQUFVLEdBQUcsS0FBS0MsYUFBTCxFQUFuQjtBQUVBRCxFQUFBQSxVQUFVLENBQUNLLGVBQVgsQ0FBMkJQLElBQTNCO0FBQ0Q7O0FBRUQsU0FBU1EsWUFBVCxDQUFzQlIsSUFBdEIsRUFBNEI7QUFDMUIsTUFBTUUsVUFBVSxHQUFHLEtBQUtDLGFBQUwsRUFBbkI7QUFFQSxTQUFPRCxVQUFVLENBQUNNLFlBQVgsQ0FBd0JSLElBQXhCLENBQVA7QUFDRDs7QUFFRCxTQUFTUyxRQUFULENBQWtCQyxTQUFsQixFQUE2QjtBQUMzQixNQUFNUixVQUFVLEdBQUcsS0FBS0MsYUFBTCxFQUFuQjtBQUVBRCxFQUFBQSxVQUFVLENBQUNPLFFBQVgsQ0FBb0JDLFNBQXBCO0FBQ0Q7O0FBRUQsU0FBU0MsUUFBVCxDQUFrQkQsU0FBbEIsRUFBNkI7QUFDM0IsTUFBTVIsVUFBVSxHQUFHLEtBQUtDLGFBQUwsRUFBbkI7QUFFQUQsRUFBQUEsVUFBVSxDQUFDUyxRQUFYLENBQW9CRCxTQUFwQjtBQUNEOztBQUVELFNBQVNFLFdBQVQsQ0FBcUJGLFNBQXJCLEVBQWdDO0FBQzlCLE1BQU1SLFVBQVUsR0FBRyxLQUFLQyxhQUFMLEVBQW5CO0FBRUFELEVBQUFBLFVBQVUsQ0FBQ1UsV0FBWCxDQUF1QkYsU0FBdkI7QUFDRDs7QUFFRCxTQUFTRyxXQUFULENBQXFCSCxTQUFyQixFQUFnQztBQUM5QixNQUFNUixVQUFVLEdBQUcsS0FBS0MsYUFBTCxFQUFuQjtBQUVBRCxFQUFBQSxVQUFVLENBQUNXLFdBQVgsQ0FBdUJILFNBQXZCO0FBQ0Q7O0FBRUQsU0FBU0ksUUFBVCxDQUFrQkosU0FBbEIsRUFBNkI7QUFDM0IsTUFBTVIsVUFBVSxHQUFHLEtBQUtDLGFBQUwsRUFBbkI7QUFFQSxTQUFPRCxVQUFVLENBQUNZLFFBQVgsQ0FBb0JKLFNBQXBCLENBQVA7QUFDRDs7QUFFRCxTQUFTSyxVQUFULENBQW9CQyxVQUFwQixFQUFnQztBQUM5QixNQUFNZCxVQUFVLEdBQUcsS0FBS0MsYUFBTCxFQUFuQjtBQUVBLFNBQU9ELFVBQVUsQ0FBQ2EsVUFBWCxDQUFzQkMsVUFBdEIsQ0FBUDtBQUNEOztBQUVELFNBQVNDLFlBQVQsR0FBd0I7QUFDdEIsTUFBTWYsVUFBVSxHQUFHLEtBQUtDLGFBQUwsRUFBbkI7QUFFQUQsRUFBQUEsVUFBVSxDQUFDZSxZQUFYO0FBQ0Q7O0FBRUQsU0FBU0MsVUFBVCxHQUFzQjtBQUNwQixTQUFPLElBQVAsQ0FEb0IsQ0FDTjtBQUNmOztBQUVELFNBQVNDLFFBQVQsQ0FBa0JuQixJQUFsQixFQUF3QkMsS0FBeEIsRUFBK0I7QUFDN0IsTUFBTUMsVUFBVSxHQUFHLEtBQUtDLGFBQUwsRUFBbkI7QUFFQUQsRUFBQUEsVUFBVSxDQUFDaUIsUUFBWCxDQUFvQm5CLElBQXBCLEVBQTBCQyxLQUExQjtBQUNEOztlQUVjO0FBQ2JGLEVBQUFBLFlBQVksRUFBWkEsWUFEYTtBQUViSyxFQUFBQSxZQUFZLEVBQVpBLFlBRmE7QUFHYkMsRUFBQUEsY0FBYyxFQUFkQSxjQUhhO0FBSWJDLEVBQUFBLFlBQVksRUFBWkEsWUFKYTtBQUtiQyxFQUFBQSxlQUFlLEVBQWZBLGVBTGE7QUFNYkMsRUFBQUEsWUFBWSxFQUFaQSxZQU5hO0FBT2JDLEVBQUFBLFFBQVEsRUFBUkEsUUFQYTtBQVFiRSxFQUFBQSxRQUFRLEVBQVJBLFFBUmE7QUFTYkMsRUFBQUEsV0FBVyxFQUFYQSxXQVRhO0FBVWJDLEVBQUFBLFdBQVcsRUFBWEEsV0FWYTtBQVdiQyxFQUFBQSxRQUFRLEVBQVJBLFFBWGE7QUFZYkMsRUFBQUEsVUFBVSxFQUFWQSxVQVphO0FBYWJFLEVBQUFBLFlBQVksRUFBWkEsWUFiYTtBQWNiQyxFQUFBQSxVQUFVLEVBQVZBLFVBZGE7QUFlYkMsRUFBQUEsUUFBUSxFQUFSQTtBQWZhLEMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gc2V0QXR0cmlidXRlKG5hbWUsIHZhbHVlKSB7XG4gIGNvbnN0IGZpcnN0Q2hpbGQgPSB0aGlzLmdldEZpcnN0Q2hpbGQoKTtcblxuICByZXR1cm4gZmlyc3RDaGlsZC5zZXRBdHRyaWJ1dGUobmFtZSwgdmFsdWUpO1xufVxuXG5mdW5jdGlvbiBnZXRBdHRyaWJ1dGUobmFtZSkge1xuICBjb25zdCBmaXJzdENoaWxkID0gdGhpcy5nZXRGaXJzdENoaWxkKCk7XG5cbiAgcmV0dXJuIGZpcnN0Q2hpbGQuZ2V0QXR0cmlidXRlKG5hbWUpO1xufVxuXG5mdW5jdGlvbiBjbGVhckF0dHJpYnV0ZShuYW1lKSB7XG4gIGNvbnN0IGZpcnN0Q2hpbGQgPSB0aGlzLmdldEZpcnN0Q2hpbGQoKTtcblxuICBmaXJzdENoaWxkLmNsZWFyQXR0cmlidXRlKG5hbWUpO1xufVxuXG5mdW5jdGlvbiBhZGRBdHRyaWJ1dGUobmFtZSwgdmFsdWUpIHtcbiAgY29uc3QgZmlyc3RDaGlsZCA9IHRoaXMuZ2V0Rmlyc3RDaGlsZCgpO1xuXG4gIGZpcnN0Q2hpbGQuYWRkQXR0cmlidXRlKG5hbWUsIHZhbHVlKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlQXR0cmlidXRlKG5hbWUpIHtcbiAgY29uc3QgZmlyc3RDaGlsZCA9IHRoaXMuZ2V0Rmlyc3RDaGlsZCgpO1xuXG4gIGZpcnN0Q2hpbGQucmVtb3ZlQXR0cmlidXRlKG5hbWUpXG59XG5cbmZ1bmN0aW9uIGhhc0F0dHJpYnV0ZShuYW1lKSB7XG4gIGNvbnN0IGZpcnN0Q2hpbGQgPSB0aGlzLmdldEZpcnN0Q2hpbGQoKTtcblxuICByZXR1cm4gZmlyc3RDaGlsZC5oYXNBdHRyaWJ1dGUobmFtZSk7XG59XG5cbmZ1bmN0aW9uIHNldENsYXNzKGNsYXNzTmFtZSkge1xuICBjb25zdCBmaXJzdENoaWxkID0gdGhpcy5nZXRGaXJzdENoaWxkKCk7XG5cbiAgZmlyc3RDaGlsZC5zZXRDbGFzcyhjbGFzc05hbWUpO1xufVxuXG5mdW5jdGlvbiBhZGRDbGFzcyhjbGFzc05hbWUpIHtcbiAgY29uc3QgZmlyc3RDaGlsZCA9IHRoaXMuZ2V0Rmlyc3RDaGlsZCgpO1xuXG4gIGZpcnN0Q2hpbGQuYWRkQ2xhc3MoY2xhc3NOYW1lKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlQ2xhc3MoY2xhc3NOYW1lKSB7XG4gIGNvbnN0IGZpcnN0Q2hpbGQgPSB0aGlzLmdldEZpcnN0Q2hpbGQoKTtcblxuICBmaXJzdENoaWxkLnJlbW92ZUNsYXNzKGNsYXNzTmFtZSk7XG59XG5cbmZ1bmN0aW9uIHRvZ2dsZUNsYXNzKGNsYXNzTmFtZSkge1xuICBjb25zdCBmaXJzdENoaWxkID0gdGhpcy5nZXRGaXJzdENoaWxkKCk7XG5cbiAgZmlyc3RDaGlsZC50b2dnbGVDbGFzcyhjbGFzc05hbWUpO1xufVxuXG5mdW5jdGlvbiBoYXNDbGFzcyhjbGFzc05hbWUpIHtcbiAgY29uc3QgZmlyc3RDaGlsZCA9IHRoaXMuZ2V0Rmlyc3RDaGlsZCgpO1xuXG4gIHJldHVybiBmaXJzdENoaWxkLmhhc0NsYXNzKGNsYXNzTmFtZSk7XG59XG5cbmZ1bmN0aW9uIGhhc0NsYXNzZXMoY2xhc3NOYW1lcykge1xuICBjb25zdCBmaXJzdENoaWxkID0gdGhpcy5nZXRGaXJzdENoaWxkKCk7XG5cbiAgcmV0dXJuIGZpcnN0Q2hpbGQuaGFzQ2xhc3NlcyhjbGFzc05hbWVzKTtcbn1cblxuZnVuY3Rpb24gY2xlYXJDbGFzc2VzKCkge1xuICBjb25zdCBmaXJzdENoaWxkID0gdGhpcy5nZXRGaXJzdENoaWxkKCk7XG5cbiAgZmlyc3RDaGlsZC5jbGVhckNsYXNzZXMoKTtcbn1cblxuZnVuY3Rpb24gZ2V0VGFnTmFtZSgpIHtcbiAgcmV0dXJuIG51bGw7ICAvLy9cbn1cblxuZnVuY3Rpb24gc2V0U3R5bGUobmFtZSwgdmFsdWUpIHtcbiAgY29uc3QgZmlyc3RDaGlsZCA9IHRoaXMuZ2V0Rmlyc3RDaGlsZCgpO1xuXG4gIGZpcnN0Q2hpbGQuc2V0U3R5bGUobmFtZSwgdmFsdWUpO1xufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHNldEF0dHJpYnV0ZSxcbiAgZ2V0QXR0cmlidXRlLFxuICBjbGVhckF0dHJpYnV0ZSxcbiAgYWRkQXR0cmlidXRlLFxuICByZW1vdmVBdHRyaWJ1dGUsXG4gIGhhc0F0dHJpYnV0ZSxcbiAgc2V0Q2xhc3MsXG4gIGFkZENsYXNzLFxuICByZW1vdmVDbGFzcyxcbiAgdG9nZ2xlQ2xhc3MsXG4gIGhhc0NsYXNzLFxuICBoYXNDbGFzc2VzLFxuICBjbGVhckNsYXNzZXMsXG4gIGdldFRhZ05hbWUsXG4gIHNldFN0eWxlXG59O1xuIl19